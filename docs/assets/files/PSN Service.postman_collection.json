{
	"info": {
		"_postman_id": "9b719b0c-6e7f-4a58-ab64-dd374b867cd0",
		"name": "PSN Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Domain TestStudie",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/pseudonymization/domain?name=TestStudie",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"pseudonymization",
						"domain"
					],
					"query": [
						{
							"key": "name",
							"value": "TestStudie"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a new Domain",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\" : \"WeitereTestStudie\",\r\n  \"prefix\" : \"WTS-\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/pseudonymization/domain",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"pseudonymization",
						"domain"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//collection variables for token and dump restore",
					"var client_id      = pm.collectionVariables.get(\"client_id\");",
					"var client_secret  = pm.collectionVariables.get(\"client_secret\");",
					"var token_endpoint = pm.collectionVariables.get(\"token_endpoint\");",
					"var grant_type     = pm.collectionVariables.get(\"grant_type\");",
					"var username       = pm.collectionVariables.get(\"username\");",
					"var password       = pm.collectionVariables.get(\"password\");",
					"",
					"var dockerContainer = pm.collectionVariables.get(\"docker_container\");",
					"var dockerPostgresUsername = pm.collectionVariables.get(\"docker_ps_username\");",
					"var dockerPostgresPassword = pm.collectionVariables.get(\"docker_ps_password\");",
					"var dockerPostgresDatabase = pm.collectionVariables.get(\"docker_ps_database\");",
					"",
					"//pre create request objects and variables",
					"var details = {",
					"    \"grant_type\" : grant_type,",
					"    \"username\" : username,",
					"    \"password\" : password,",
					"    \"client_id\" : client_id,",
					"    \"client_secret\" : client_secret",
					"}",
					"",
					"var formBody = [];",
					"for (var property in details) {",
					"    var encodedKey = encodeURIComponent(property);",
					"    var encodedValue = encodeURIComponent(details[property]);",
					"    formBody.push(encodedKey + \"=\" + encodedValue);",
					"}",
					"formBody = formBody.join(\"&\");",
					"",
					"var local_dump_restore_endpoint = \"http://localhost:3000/restore?container=\"+dockerContainer+\"&username=\"+dockerPostgresUsername+\"&password=\"+dockerPostgresPassword+\"&db=\"+dockerPostgresDatabase;",
					"",
					"//do nested request to restore database and request token",
					"pm.sendRequest({",
					"    url: local_dump_restore_endpoint,",
					"    method: 'GET',",
					"},  function(err, response) {",
					"    console.log(response);",
					"    pm.sendRequest({",
					"        url: token_endpoint,",
					"        method: 'POST',",
					"        header: {",
					"            'Content-Type': 'application/x-www-form-urlencoded'",
					"        },",
					"        body: formBody",
					"    },  function(err, response) {",
					"        const jsonResponse = response.json();",
					"        console.log(jsonResponse);",
					"        pm.collectionVariables.set(\"access_token\", jsonResponse.access_token);",
					"        console.log(pm.collectionVariables.get(\"access_token\"));",
					"    });",
					" });",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "client_id",
			"value": "ace",
			"type": "default"
		},
		{
			"key": "client_secret",
			"value": "1h6T3Dnx45hrd4pgv7YdcIfP9GRarbpN",
			"type": "default"
		},
		{
			"key": "token_endpoint",
			"value": "http://host.docker.internal:8081/realms/development/protocol/openid-connect/token",
			"type": "default"
		},
		{
			"key": "grant_type",
			"value": "password",
			"type": "default"
		},
		{
			"key": "username",
			"value": "test",
			"type": "default"
		},
		{
			"key": "password",
			"value": "test",
			"type": "default"
		},
		{
			"key": "docker_container",
			"value": "ps-postgresql",
			"type": "default"
		},
		{
			"key": "docker_ps_username",
			"value": "ace-manager",
			"type": "default"
		},
		{
			"key": "docker_ps_password",
			"value": "ps3udoNym1zation!",
			"type": "default"
		},
		{
			"key": "docker_ps_database",
			"value": "pseudonymization",
			"type": "default"
		},
		{
			"key": "access_token",
			"value": ""
		}
	]
}